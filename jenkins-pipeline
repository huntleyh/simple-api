import groovy.json.JsonSlurper

def getFtpPublishProfile(def publishProfilesJson) {
  def pubProfiles = new JsonSlurper().parseText(publishProfilesJson)
  for (p in pubProfiles)
    if (p['publishMethod'] == 'FTP')
      return [url: p.publishUrl, username: p.userName, password: p.userPWD]
}

node {
  def msbuildHome = tool name: 'msbuild22'
  
  withEnv(['AZURE_SUBSCRIPTION_ID=32d270c8-50d1-4fec-8afe-85bd670e83ba',
        'AZURE_TENANT_ID=16ce3176-726f-4505-a3fe-1b8ae984c4ad',
        "PATH+MSBUILD=${msbuildHome}"]) {
    stage('Checkout git repo') {
        git branch: 'main', url: params.git_repo
    }
  
    stage('Restore NuGet packages') {
        bat(script: "nuget.exe restore simple-api.sln", returnStdout: true)
    }

    stage('build and publish') {
        bat(script: "\"${msbuildHome}\\msbuild.exe\" simple-api.sln /p:DeployOnBuild=true /p:WebPublishMethod=FileSystem /p:PublishDir=./publish", returnStdout: true)
    }
  
    stage('deploy') {
        def resourceGroup = 'hhdotnetsampleapp_group'
        def webAppName = 'hhdotnetsampleapp'
        // login Azure
        withCredentials([usernamePassword(credentialsId: 'azure-service-principal', passwordVariable: 'AZURE_CLIENT_SECRET', usernameVariable: 'AZURE_CLIENT_ID')]) {
        bat '''
            az login --service-principal -u %AZURE_CLIENT_ID% -p %AZURE_CLIENT_SECRET% -t %AZURE_TENANT_ID%
            az account set -s %AZURE_SUBSCRIPTION_ID%
        '''
        }
        // get publish settings

        def profilescript = "az webapp deployment list-publishing-profiles -g \"${resourceGroup}\" -n \"${webAppName}\" -o json"

        def pubProfilesJson = bat(script: profilescript, returnStdout: true).trim()
        
        // Use PowerShell to parse JSON and extract FTP profile
        def ftpProfile = powershell(script: """
            \$json = ${pubProfilesJson}
            \$jsonObject = \$json | ConvertFrom-Json
            \$ftpProfile = \$jsonObject | Where-Object { \$_.'publishMethod' -eq 'FTP' }
            Write-Output \$ftpProfile
            Write-Output "\$ftpProfile.publishUrl,\$ftpProfile.userName,\$ftpProfile.userPWD"
        """, returnStdout: true).trim()

        def ftpProfileParts = ftpProfile.split(',')
        def ftpUrl = ftpProfileParts[0]
        def ftpUsername = ftpProfileParts[1]
        def ftpPassword = ftpProfileParts[2]

        // upload package
        bat "curl -T ./publish/* ${ftpUrl} -u ${ftpUsername}:${ftpPassword}"
        // log out
        bat 'az logout'
    }
  }
}