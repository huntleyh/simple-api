import groovy.json.JsonSlurper

def getFtpPublishProfile(def publishProfilesJson) {
  def pubProfiles = new JsonSlurper().parseText(publishProfilesJson)
  for (p in pubProfiles)
    if (p['publishMethod'] == 'FTP')
      return [url: p.publishUrl, username: p.userName, password: p.userPWD]
}

node {
  def msbuildHome = tool name: 'msbuild22'
  
  withEnv(['AZURE_SUBSCRIPTION_ID=16b3c013-d300-468d-ac64-7eda0820b6d3',
        'AZURE_TENANT_ID=0a30d5b7-4d7b-48d9-b646-58adabe26a61',
        "PATH+MSBUILD=${msbuildHome}"]) {
    stage('Checkout git repo') {
        git branch: 'main', url: params.git_repo
    }
  
    stage('Restore NuGet packages') {
        bat(script: "nuget.exe restore simple-api.sln", returnStdout: true)
    }

    stage('build and publish') {
        bat(script: "\"${msbuildHome}\\msbuild.exe\" simple-api.sln /p:DeployOnBuild=true ", returnStdout: true)
    }
  
    stage('deploy') {
        def resourceGroup = 'rewrite-sample'
        def webAppName = 'hhrestapi-sample'
        // login Azure
        withCredentials([usernamePassword(credentialsId: 'azure-service-principal>', passwordVariable: 'AZURE_CLIENT_SECRET', usernameVariable: 'AZURE_CLIENT_ID')]) {
        bat '''
            az login --service-principal -u $AZURE_CLIENT_ID -p $AZURE_CLIENT_SECRET -t $AZURE_TENANT_ID
            az account set -s $AZURE_SUBSCRIPTION_ID
        '''
        }
        // get publish settings
        def pubProfilesJson = bat script: "az webapp deployment list-publishing-profiles -g $resourceGroup -n $webAppName", returnStdout: true
        def ftpProfile = getFtpPublishProfile pubProfilesJson
        // upload package
        bah "curl -T target/calculator-1.0.war $ftpProfile.url/webapps/ROOT.war -u '$ftpProfile.username:$ftpProfile.password'"
        // log out
        bat 'az logout'
    }
  }
}